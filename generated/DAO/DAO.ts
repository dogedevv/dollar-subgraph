// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Advanced extends ethereum.Event {
  get params(): Advanced__Params {
    return new Advanced__Params(this);
  }
}

export class Advanced__Params {
  _event: Advanced;

  constructor(event: Advanced) {
    this._event = event;
  }

  get epoch(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BondPurchased extends ethereum.Event {
  get params(): BondPurchased__Params {
    return new BondPurchased__Params(this);
  }
}

export class BondPurchased__Params {
  _event: BondPurchased;

  constructor(event: BondPurchased) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get dollars(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get debts(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BondRedeemed extends ethereum.Event {
  get params(): BondRedeemed__Params {
    return new BondRedeemed__Params(this);
  }
}

export class BondRedeemed__Params {
  _event: BondRedeemed;

  constructor(event: BondRedeemed) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get slots(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get dollars(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Collected extends ethereum.Event {
  get params(): Collected__Params {
    return new Collected__Params(this);
  }
}

export class Collected__Params {
  _event: Collected;

  constructor(event: Collected) {
    this._event = event;
  }

  get depositor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get epoch(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class DebtApproval extends ethereum.Event {
  get params(): DebtApproval__Params {
    return new DebtApproval__Params(this);
  }
}

export class DebtApproval__Params {
  _event: DebtApproval;

  constructor(event: DebtApproval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get debts(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class DebtListingCancelled extends ethereum.Event {
  get params(): DebtListingCancelled__Params {
    return new DebtListingCancelled__Params(this);
  }
}

export class DebtListingCancelled__Params {
  _event: DebtListingCancelled;

  constructor(event: DebtListingCancelled) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DebtListingCreated extends ethereum.Event {
  get params(): DebtListingCreated__Params {
    return new DebtListingCreated__Params(this);
  }
}

export class DebtListingCreated__Params {
  _event: DebtListingCreated;

  constructor(event: DebtListingCreated) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get start(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get pricePerDebt(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get maxHarvestableIndex(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get mode(): i32 {
    return this._event.parameters[6].value.toI32();
  }
}

export class DebtListingFilled extends ethereum.Event {
  get params(): DebtListingFilled__Params {
    return new DebtListingFilled__Params(this);
  }
}

export class DebtListingFilled__Params {
  _event: DebtListingFilled;

  constructor(event: DebtListingFilled) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get start(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class DebtOrderCancelled extends ethereum.Event {
  get params(): DebtOrderCancelled__Params {
    return new DebtOrderCancelled__Params(this);
  }
}

export class DebtOrderCancelled__Params {
  _event: DebtOrderCancelled;

  constructor(event: DebtOrderCancelled) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class DebtOrderCreated extends ethereum.Event {
  get params(): DebtOrderCreated__Params {
    return new DebtOrderCreated__Params(this);
  }
}

export class DebtOrderCreated__Params {
  _event: DebtOrderCreated;

  constructor(event: DebtOrderCreated) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get pricePerDebt(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get maxPlaceInLine(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class DebtOrderFilled extends ethereum.Event {
  get params(): DebtOrderFilled__Params {
    return new DebtOrderFilled__Params(this);
  }
}

export class DebtOrderFilled__Params {
  _event: DebtOrderFilled;

  constructor(event: DebtOrderFilled) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get id(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get index(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get start(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Deposited extends ethereum.Event {
  get params(): Deposited__Params {
    return new Deposited__Params(this);
  }
}

export class Deposited__Params {
  _event: Deposited;

  constructor(event: Deposited) {
    this._event = event;
  }

  get depositor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get epoch(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class NewBonds extends ethereum.Event {
  get params(): NewBonds__Params {
    return new NewBonds__Params(this);
  }
}

export class NewBonds__Params {
  _event: NewBonds;

  constructor(event: NewBonds) {
    this._event = event;
  }

  get epoch(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bonds(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class NewInterestRate extends ethereum.Event {
  get params(): NewInterestRate__Params {
    return new NewInterestRate__Params(this);
  }
}

export class NewInterestRate__Params {
  _event: NewInterestRate;

  constructor(event: NewInterestRate) {
    this._event = event;
  }

  get epoch(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get debtRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get bondDemand(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get oldInterest(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get newInterest(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class NewSupply extends ethereum.Event {
  get params(): NewSupply__Params {
    return new NewSupply__Params(this);
  }
}

export class NewSupply__Params {
  _event: NewSupply;

  constructor(event: NewSupply) {
    this._event = event;
  }

  get epoch(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get toBonding(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get toStaking(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SlotTransfer extends ethereum.Event {
  get params(): SlotTransfer__Params {
    return new SlotTransfer__Params(this);
  }
}

export class SlotTransfer__Params {
  _event: SlotTransfer;

  constructor(event: SlotTransfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get debts(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class WithdrawClaimed extends ethereum.Event {
  get params(): WithdrawClaimed__Params {
    return new WithdrawClaimed__Params(this);
  }
}

export class WithdrawClaimed__Params {
  _event: WithdrawClaimed;

  constructor(event: WithdrawClaimed) {
    this._event = event;
  }

  get depositor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get epoch(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class WithdrawRequested extends ethereum.Event {
  get params(): WithdrawRequested__Params {
    return new WithdrawRequested__Params(this);
  }
}

export class WithdrawRequested__Params {
  _event: WithdrawRequested;

  constructor(event: WithdrawRequested) {
    this._event = event;
  }

  get depositor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get currentEpoch(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get claimableEpoch(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class DAO__accountInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }
}

export class DAO__balanceOfDepositsResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get ddv(): BigInt {
    return this[1].toBigInt();
  }
}

export class DAO__balanceOfWithdrawalsResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get epoch(): BigInt {
    return this[1].toBigInt();
  }
}

export class DAO__creditInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }
}

export class DAO__daoAssetsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class DAO__daoBalancesResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class DAO__epochInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class DAO__stakeInfoResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class DAO extends ethereum.SmartContract {
  static bind(address: Address): DAO {
    return new DAO("DAO", address);
  }

  accountInfo(param0: Address): DAO__accountInfoResult {
    let result = super.call(
      "accountInfo",
      "accountInfo(address):(uint256,uint256,uint256,uint256,uint32)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new DAO__accountInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_accountInfo(
    param0: Address
  ): ethereum.CallResult<DAO__accountInfoResult> {
    let result = super.tryCall(
      "accountInfo",
      "accountInfo(address):(uint256,uint256,uint256,uint256,uint32)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DAO__accountInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }

  allowanceDebts(owner: Address, spender: Address): BigInt {
    let result = super.call(
      "allowanceDebts",
      "allowanceDebts(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );

    return result[0].toBigInt();
  }

  try_allowanceDebts(
    owner: Address,
    spender: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowanceDebts",
      "allowanceDebts(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOfDeposits(
    account: Address,
    token: Address
  ): DAO__balanceOfDepositsResultValue0Struct {
    let result = super.call(
      "balanceOfDeposits",
      "balanceOfDeposits(address,address):((uint256,uint256))",
      [ethereum.Value.fromAddress(account), ethereum.Value.fromAddress(token)]
    );

    return changetype<DAO__balanceOfDepositsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_balanceOfDeposits(
    account: Address,
    token: Address
  ): ethereum.CallResult<DAO__balanceOfDepositsResultValue0Struct> {
    let result = super.tryCall(
      "balanceOfDeposits",
      "balanceOfDeposits(address,address):((uint256,uint256))",
      [ethereum.Value.fromAddress(account), ethereum.Value.fromAddress(token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DAO__balanceOfDepositsResultValue0Struct>(value[0].toTuple())
    );
  }

  balanceOfEarnedDollars(account: Address): BigInt {
    let result = super.call(
      "balanceOfEarnedDollars",
      "balanceOfEarnedDollars(address):(uint256)",
      [ethereum.Value.fromAddress(account)]
    );

    return result[0].toBigInt();
  }

  try_balanceOfEarnedDollars(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOfEarnedDollars",
      "balanceOfEarnedDollars(address):(uint256)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOfGrownShares(account: Address): BigInt {
    let result = super.call(
      "balanceOfGrownShares",
      "balanceOfGrownShares(address):(uint256)",
      [ethereum.Value.fromAddress(account)]
    );

    return result[0].toBigInt();
  }

  try_balanceOfGrownShares(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOfGrownShares",
      "balanceOfGrownShares(address):(uint256)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOfShares(account: Address): BigInt {
    let result = super.call(
      "balanceOfShares",
      "balanceOfShares(address):(uint256)",
      [ethereum.Value.fromAddress(account)]
    );

    return result[0].toBigInt();
  }

  try_balanceOfShares(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOfShares",
      "balanceOfShares(address):(uint256)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOfWithdrawals(
    account: Address,
    token: Address
  ): DAO__balanceOfWithdrawalsResultValue0Struct {
    let result = super.call(
      "balanceOfWithdrawals",
      "balanceOfWithdrawals(address,address):((uint256,uint32))",
      [ethereum.Value.fromAddress(account), ethereum.Value.fromAddress(token)]
    );

    return changetype<DAO__balanceOfWithdrawalsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_balanceOfWithdrawals(
    account: Address,
    token: Address
  ): ethereum.CallResult<DAO__balanceOfWithdrawalsResultValue0Struct> {
    let result = super.tryCall(
      "balanceOfWithdrawals",
      "balanceOfWithdrawals(address,address):((uint256,uint32))",
      [ethereum.Value.fromAddress(account), ethereum.Value.fromAddress(token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DAO__balanceOfWithdrawalsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  creditInfo(): DAO__creditInfoResult {
    let result = super.call(
      "creditInfo",
      "creditInfo():(uint256,uint256,uint256,uint256,uint256,uint256)",
      []
    );

    return new DAO__creditInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_creditInfo(): ethereum.CallResult<DAO__creditInfoResult> {
    let result = super.tryCall(
      "creditInfo",
      "creditInfo():(uint256,uint256,uint256,uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DAO__creditInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  daoAssets(param0: Address): DAO__daoAssetsResult {
    let result = super.call(
      "daoAssets",
      "daoAssets(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new DAO__daoAssetsResult(result[0].toBigInt(), result[1].toBigInt());
  }

  try_daoAssets(param0: Address): ethereum.CallResult<DAO__daoAssetsResult> {
    let result = super.tryCall(
      "daoAssets",
      "daoAssets(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DAO__daoAssetsResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  daoBalances(param0: Address): DAO__daoBalancesResult {
    let result = super.call(
      "daoBalances",
      "daoBalances(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new DAO__daoBalancesResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_daoBalances(
    param0: Address
  ): ethereum.CallResult<DAO__daoBalancesResult> {
    let result = super.tryCall(
      "daoBalances",
      "daoBalances(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DAO__daoBalancesResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  debtOrder(
    account: Address,
    pricePerDebt: i32,
    maxPlaceInLine: BigInt
  ): BigInt {
    let result = super.call(
      "debtOrder",
      "debtOrder(address,uint24,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pricePerDebt)),
        ethereum.Value.fromUnsignedBigInt(maxPlaceInLine)
      ]
    );

    return result[0].toBigInt();
  }

  try_debtOrder(
    account: Address,
    pricePerDebt: i32,
    maxPlaceInLine: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "debtOrder",
      "debtOrder(address,uint24,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pricePerDebt)),
        ethereum.Value.fromUnsignedBigInt(maxPlaceInLine)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  dollar(): Address {
    let result = super.call("dollar", "dollar():(address)", []);

    return result[0].toAddress();
  }

  try_dollar(): ethereum.CallResult<Address> {
    let result = super.tryCall("dollar", "dollar():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  earnedDollar(): BigInt {
    let result = super.call("earnedDollar", "earnedDollar():(uint256)", []);

    return result[0].toBigInt();
  }

  try_earnedDollar(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("earnedDollar", "earnedDollar():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  epochInfo(): DAO__epochInfoResult {
    let result = super.call(
      "epochInfo",
      "epochInfo():(uint32,uint256,uint256)",
      []
    );

    return new DAO__epochInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_epochInfo(): ethereum.CallResult<DAO__epochInfoResult> {
    let result = super.tryCall(
      "epochInfo",
      "epochInfo():(uint32,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DAO__epochInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  epochTime(): BigInt {
    let result = super.call("epochTime", "epochTime():(uint32)", []);

    return result[0].toBigInt();
  }

  try_epochTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("epochTime", "epochTime():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  oracle(): Address {
    let result = super.call("oracle", "oracle():(address)", []);

    return result[0].toAddress();
  }

  try_oracle(): ethereum.CallResult<Address> {
    let result = super.tryCall("oracle", "oracle():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  stakeInfo(): DAO__stakeInfoResult {
    let result = super.call("stakeInfo", "stakeInfo():(uint256,uint256)", []);

    return new DAO__stakeInfoResult(result[0].toBigInt(), result[1].toBigInt());
  }

  try_stakeInfo(): ethereum.CallResult<DAO__stakeInfoResult> {
    let result = super.tryCall(
      "stakeInfo",
      "stakeInfo():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DAO__stakeInfoResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }
}

export class AdvanceCall extends ethereum.Call {
  get inputs(): AdvanceCall__Inputs {
    return new AdvanceCall__Inputs(this);
  }

  get outputs(): AdvanceCall__Outputs {
    return new AdvanceCall__Outputs(this);
  }
}

export class AdvanceCall__Inputs {
  _call: AdvanceCall;

  constructor(call: AdvanceCall) {
    this._call = call;
  }
}

export class AdvanceCall__Outputs {
  _call: AdvanceCall;

  constructor(call: AdvanceCall) {
    this._call = call;
  }
}

export class CancelDebtListingCall extends ethereum.Call {
  get inputs(): CancelDebtListingCall__Inputs {
    return new CancelDebtListingCall__Inputs(this);
  }

  get outputs(): CancelDebtListingCall__Outputs {
    return new CancelDebtListingCall__Outputs(this);
  }
}

export class CancelDebtListingCall__Inputs {
  _call: CancelDebtListingCall;

  constructor(call: CancelDebtListingCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelDebtListingCall__Outputs {
  _call: CancelDebtListingCall;

  constructor(call: CancelDebtListingCall) {
    this._call = call;
  }
}

export class CancelDebtOrderCall extends ethereum.Call {
  get inputs(): CancelDebtOrderCall__Inputs {
    return new CancelDebtOrderCall__Inputs(this);
  }

  get outputs(): CancelDebtOrderCall__Outputs {
    return new CancelDebtOrderCall__Outputs(this);
  }
}

export class CancelDebtOrderCall__Inputs {
  _call: CancelDebtOrderCall;

  constructor(call: CancelDebtOrderCall) {
    this._call = call;
  }

  get pricePerPod(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get maxPlaceInLine(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CancelDebtOrderCall__Outputs {
  _call: CancelDebtOrderCall;

  constructor(call: CancelDebtOrderCall) {
    this._call = call;
  }
}

export class ClaimCall extends ethereum.Call {
  get inputs(): ClaimCall__Inputs {
    return new ClaimCall__Inputs(this);
  }

  get outputs(): ClaimCall__Outputs {
    return new ClaimCall__Outputs(this);
  }
}

export class ClaimCall__Inputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ClaimCall__Outputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class CollectCall extends ethereum.Call {
  get inputs(): CollectCall__Inputs {
    return new CollectCall__Inputs(this);
  }

  get outputs(): CollectCall__Outputs {
    return new CollectCall__Outputs(this);
  }
}

export class CollectCall__Inputs {
  _call: CollectCall;

  constructor(call: CollectCall) {
    this._call = call;
  }
}

export class CollectCall__Outputs {
  _call: CollectCall;

  constructor(call: CollectCall) {
    this._call = call;
  }
}

export class CreateDebtListingCall extends ethereum.Call {
  get inputs(): CreateDebtListingCall__Inputs {
    return new CreateDebtListingCall__Inputs(this);
  }

  get outputs(): CreateDebtListingCall__Outputs {
    return new CreateDebtListingCall__Outputs(this);
  }
}

export class CreateDebtListingCall__Inputs {
  _call: CreateDebtListingCall;

  constructor(call: CreateDebtListingCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get start(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get pricePerDebt(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get maxHarvestableIndex(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get mode(): i32 {
    return this._call.inputValues[5].value.toI32();
  }
}

export class CreateDebtListingCall__Outputs {
  _call: CreateDebtListingCall;

  constructor(call: CreateDebtListingCall) {
    this._call = call;
  }
}

export class CreateDebtOrderCall extends ethereum.Call {
  get inputs(): CreateDebtOrderCall__Inputs {
    return new CreateDebtOrderCall__Inputs(this);
  }

  get outputs(): CreateDebtOrderCall__Outputs {
    return new CreateDebtOrderCall__Outputs(this);
  }
}

export class CreateDebtOrderCall__Inputs {
  _call: CreateDebtOrderCall;

  constructor(call: CreateDebtOrderCall) {
    this._call = call;
  }

  get dollarAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get pricePerPod(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get maxPlaceInLine(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateDebtOrderCall__Outputs {
  _call: CreateDebtOrderCall;

  constructor(call: CreateDebtOrderCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class FillDebtListingCall extends ethereum.Call {
  get inputs(): FillDebtListingCall__Inputs {
    return new FillDebtListingCall__Inputs(this);
  }

  get outputs(): FillDebtListingCall__Outputs {
    return new FillDebtListingCall__Outputs(this);
  }
}

export class FillDebtListingCall__Inputs {
  _call: FillDebtListingCall;

  constructor(call: FillDebtListingCall) {
    this._call = call;
  }

  get l(): FillDebtListingCallLStruct {
    return changetype<FillDebtListingCallLStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get dollarAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class FillDebtListingCall__Outputs {
  _call: FillDebtListingCall;

  constructor(call: FillDebtListingCall) {
    this._call = call;
  }
}

export class FillDebtListingCallLStruct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get index(): BigInt {
    return this[1].toBigInt();
  }

  get start(): BigInt {
    return this[2].toBigInt();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }

  get pricePerDebt(): i32 {
    return this[4].toI32();
  }

  get maxHarvestableIndex(): BigInt {
    return this[5].toBigInt();
  }

  get mode(): i32 {
    return this[6].toI32();
  }
}

export class FillDebtOrderCall extends ethereum.Call {
  get inputs(): FillDebtOrderCall__Inputs {
    return new FillDebtOrderCall__Inputs(this);
  }

  get outputs(): FillDebtOrderCall__Outputs {
    return new FillDebtOrderCall__Outputs(this);
  }
}

export class FillDebtOrderCall__Inputs {
  _call: FillDebtOrderCall;

  constructor(call: FillDebtOrderCall) {
    this._call = call;
  }

  get o(): FillDebtOrderCallOStruct {
    return changetype<FillDebtOrderCallOStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get start(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class FillDebtOrderCall__Outputs {
  _call: FillDebtOrderCall;

  constructor(call: FillDebtOrderCall) {
    this._call = call;
  }
}

export class FillDebtOrderCallOStruct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get pricePerDebt(): i32 {
    return this[1].toI32();
  }

  get maxPlaceInLine(): BigInt {
    return this[2].toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _dollar(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _oracle(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _epochStart(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _creditStartInterest(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PurchaseCall extends ethereum.Call {
  get inputs(): PurchaseCall__Inputs {
    return new PurchaseCall__Inputs(this);
  }

  get outputs(): PurchaseCall__Outputs {
    return new PurchaseCall__Outputs(this);
  }
}

export class PurchaseCall__Inputs {
  _call: PurchaseCall;

  constructor(call: PurchaseCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PurchaseCall__Outputs {
  _call: PurchaseCall;

  constructor(call: PurchaseCall) {
    this._call = call;
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get slots(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateDaoAssetCall extends ethereum.Call {
  get inputs(): UpdateDaoAssetCall__Inputs {
    return new UpdateDaoAssetCall__Inputs(this);
  }

  get outputs(): UpdateDaoAssetCall__Outputs {
    return new UpdateDaoAssetCall__Outputs(this);
  }
}

export class UpdateDaoAssetCall__Inputs {
  _call: UpdateDaoAssetCall;

  constructor(call: UpdateDaoAssetCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _papersPerDDV(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _sharesPerDDV(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateDaoAssetCall__Outputs {
  _call: UpdateDaoAssetCall;

  constructor(call: UpdateDaoAssetCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
